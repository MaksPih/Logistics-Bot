from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

router = Router()

# –ì–æ–ª–æ–≤–Ω–∞ –∫–Ω–æ–ø–∫–∞
@router.message(lambda msg: msg.text == "üìã –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ –ø—Ä–æ TransLine Logistics")
async def info_menu(message: Message):
    text = (
        "üè¢ *TransLine Logistics* ‚Äî —Å—É—á–∞—Å–Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ-–ª–æ–≥—ñ—Å—Ç–∏—á–Ω–∞ –∫–æ–º–ø–∞–Ω—ñ—è, —è–∫–∞ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –Ω–∞ –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—ñ –≤–∞–Ω—Ç–∞–∂—ñ–≤ –ø–æ –≤—Å—ñ–π –£–∫—Ä–∞—ó–Ω—ñ —Ç–∞ –∑–∞ —ó—ó –º–µ–∂–∞–º–∏.\n\n"
        "üîπ –ú–∏ –ø–æ—î–¥–Ω—É—î–º–æ –≤–ª–∞—Å–Ω–∏–π –∞–≤—Ç–æ–ø–∞—Ä–∫, —Ü–∏—Ñ—Ä–æ–≤—ñ —Ä—ñ—à–µ–Ω–Ω—è —Ç–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—É –∫–æ–º–∞–Ω–¥—É, —â–æ–± –∑–∞–±–µ–∑–ø–µ—á–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞–º –≤–∏—Å–æ–∫—É —è–∫—ñ—Å—Ç—å –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è.\n\n"
        "‚úÖ –ï—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å, –ø—Ä–æ–∑–æ—Ä—ñ—Å—Ç—å —ñ —Ç—É—Ä–±–æ—Ç–∞ –ø—Ä–æ –∫–æ–∂–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞ ‚Äî –Ω–∞—à—ñ –æ—Å–Ω–æ–≤–Ω—ñ –ø—Ä–∏–Ω—Ü–∏–ø–∏."
    )
    await message.answer(text, parse_mode="Markdown", reply_markup=main_info_kb)

# –Ü–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
main_info_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üì¶ –ü–æ—Å–ª—É–≥–∏", callback_data="info_services")],
        [InlineKeyboardButton(text="üîß –°–µ—Ä–≤—ñ—Å —Ç–∞ —Ü—ñ–Ω–Ω–æ—Å—Ç—ñ", callback_data="info_about")],
        [InlineKeyboardButton(text="üöõ –ù–∞—à –∞–≤—Ç–æ–ø–∞—Ä–∫", callback_data="info_trucks")],
    ]
)

back_to_info_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="info_back_section")]
    ]
)

# –¶—ñ–Ω–Ω–æ—Å—Ç—ñ —Ç–∞ —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞
@router.callback_query(F.data == "info_about")
async def about_company(callback: CallbackQuery):
    text = (
        "üîß *–°–µ—Ä–≤—ñ—Å —Ç–∞ —Ü—ñ–Ω–Ω–æ—Å—Ç—ñ*\n\n"
        "TransLine Logistics –º–∞—î –≤–ª–∞—Å–Ω—É —Å—Ç–∞–Ω—Ü—ñ—é —Ç–µ—Ö–Ω—ñ—á–Ω–æ–≥–æ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è, –æ–±–ª–∞–¥–Ω–∞–Ω—É –∑–∞ —î–≤—Ä–æ–ø–µ–π—Å—å–∫–∏–º–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º–∏. "
        "–ù–∞—à—ñ —Ñ–∞—Ö—ñ–≤—Ü—ñ –≤–∏–∫–æ–Ω—É—é—Ç—å —Å–≤–æ—î—á–∞—Å–Ω–µ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è —è–∫ –≤–ª–∞—Å–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É, —Ç–∞–∫ —ñ —Ç–µ—Ö–Ω—ñ–∫–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤-–ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤.\n\n"
        "–°–¢–û –≤–∫–ª—é—á–∞—î 12 —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö –º–∞–π–¥–∞–Ω—á–∏–∫—ñ–≤: –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫—É, –∑–≤–∞—Ä—é–≤–∞–ª—å–Ω—ñ —Ç–∞ —Ñ–∞—Ä–±—É–≤–∞–ª—å–Ω—ñ –ø–æ—Å—Ç–∏, —Ä–∏—Ö—Ç—É–≤–∞–Ω–Ω—è, —à–∏–Ω–æ–º–æ–Ω—Ç–∞–∂ —ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—É –º–∏–π–∫—É. "
        "–û–±–ª–∞–¥–Ω–∞–Ω–Ω—è –¥–æ–∑–≤–æ–ª—è—î –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –≥–∞—Ä–∞–Ω—Ç—ñ–π–Ω–∏–π —Ä–µ–º–æ–Ω—Ç –≤–∞–Ω—Ç–∞–∂—ñ–≤–æ–∫ –ø—Ä–æ–≤—ñ–¥–Ω–∏—Ö –±—Ä–µ–Ω–¥—ñ–≤.\n\n"
        "üíº *–ù–∞—à—ñ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ñ —Ü—ñ–Ω–Ω–æ—Å—Ç—ñ:*\n"
        "‚Ä¢ –ü–æ–≤–∞–≥–∞\n"
        "‚Ä¢ –ö–æ–º–∞–Ω–¥–Ω–∏–π –¥—É—Ö —Ç–∞ —ñ–Ω—ñ—Ü—ñ–∞—Ç–∏–≤–Ω—ñ—Å—Ç—å\n"
        "‚Ä¢ –®–≤–∏–¥–∫—ñ—Å—Ç—å\n"
        "‚Ä¢ –§–æ–∫—É—Å –Ω–∞ –∫–ª—ñ—î–Ω—Ç–∞\n"
        "‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å"
    )
    await callback.message.edit_text(text, parse_mode="Markdown", reply_markup=back_to_info_kb)
    await callback.answer()

# –ü–æ—Å–ª—É–≥–∏
@router.callback_query(F.data == "info_services")
async def services_info(callback: CallbackQuery):
    text = (
        "üì¶ *–ú–∏ –Ω–∞–¥–∞—î–º–æ —Ç–∞–∫—ñ –ø–æ—Å–ª—É–≥–∏:*\n\n"
        "‚Ä¢ –í–∞–Ω—Ç–∞–∂–Ω—ñ –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è –ø–æ –£–∫—Ä–∞—ó–Ω—ñ\n"
        "‚Ä¢ –ü–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω–∏—Ö –≤–∞–Ω—Ç–∞–∂—ñ–≤\n"
        "‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞ —Å–∏–ø—É—á–∏—Ö —ñ —Ä—ñ–¥–∫–∏—Ö –≤–∞–Ω—Ç–∞–∂—ñ–≤\n"
        "‚Ä¢ –ü–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤\n"
        "‚Ä¢ –û–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ—Å—Ç–∏—á–Ω–∏—Ö –ª–∞–Ω—Ü—é–≥—ñ–≤ B2B\n"
        "‚Ä¢ –ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –º–∞—Ä—à—Ä—É—Ç—É —á–µ—Ä–µ–∑ –±–æ—Ç–∞"
    )
    await callback.message.edit_text(text, parse_mode="Markdown", reply_markup=back_to_info_kb)
    await callback.answer()

# –ê–≤—Ç–æ–ø–∞—Ä–∫
@router.callback_query(F.data == "info_trucks")
async def trucks_info(callback: CallbackQuery):
    text = (
        "üöõ *–ù–∞—à –∞–≤—Ç–æ–ø–∞—Ä–∫ –≤–∫–ª—é—á–∞—î:*\n\n"
        "‚Ä¢ –¢–µ–Ω—Ç–æ–≤–∞–Ω—ñ –≤–∞–Ω—Ç–∞–∂—ñ–≤–∫–∏ (5‚Äì24 —Ç)\n"
        "‚Ä¢ –†–µ—Ñ—Ä–∏–∂–µ—Ä–∞—Ç–æ—Ä–∏ –¥–ª—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω–∏—Ö –≤–∞–Ω—Ç–∞–∂—ñ–≤\n"
        "‚Ä¢ –ó–µ—Ä–Ω–æ–≤–æ–∑–∏-—Å–∞–º–æ—Å–∫–∏–¥–∏\n"
        "‚Ä¢ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤–æ–∑–∏\n"
        "‚Ä¢ –ê–≤—Ç–æ—Ü–∏—Å—Ç–µ—Ä–Ω–∏\n"
        "‚Ä¢ –¢—Ä–∞–ª–∏ –¥–ª—è –Ω–µ–≥–∞–±–∞—Ä–∏—Ç–Ω–∏—Ö –≤–∞–Ω—Ç–∞–∂—ñ–≤\n\n"
        "–ö–æ–º–ø–∞–Ω—ñ—è –∞–∫—Ç–∏–≤–Ω–æ —ñ–Ω–≤–µ—Å—Ç—É—î –≤ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤—Ç–æ–ø–∞—Ä–∫—É. –ó–∞ –æ—Å—Ç–∞–Ω–Ω—ñ —Ä–æ–∫–∏ –ø—Ä–∏–¥–±–∞–Ω–æ 80 –Ω–æ–≤–∏—Ö –∞–≤—Ç–æ ‚Äî "
        "–±—ñ–ª—å—à–µ 80% –∑ —è–∫–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º EURO-5 —Ç–∞ EURO-6. "
        "–£–≤–µ—Å—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –æ–±–ª–∞–¥–Ω–∞–Ω–æ GPS-–º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥–æ–º."
    )
    await callback.message.edit_text(text, parse_mode="Markdown", reply_markup=back_to_info_kb)
    await callback.answer()

# –ù–∞–∑–∞–¥
@router.callback_query(F.data.in_({"info_back_section"}))
async def back_to_info(callback: CallbackQuery):
    await callback.message.edit_text("üè¢ *TransLine Logistics* ‚Äî —Å—É—á–∞—Å–Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ-–ª–æ–≥—ñ—Å—Ç–∏—á–Ω–∞ –∫–æ–º–ø–∞–Ω—ñ—è, —è–∫–∞ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –Ω–∞ –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—ñ –≤–∞–Ω—Ç–∞–∂—ñ–≤ –ø–æ –≤—Å—ñ–π –£–∫—Ä–∞—ó–Ω—ñ —Ç–∞ –∑–∞ —ó—ó –º–µ–∂–∞–º–∏.\n\n"
        "üîπ –ú–∏ –ø–æ—î–¥–Ω—É—î–º–æ –≤–ª–∞—Å–Ω–∏–π –∞–≤—Ç–æ–ø–∞—Ä–∫, —Ü–∏—Ñ—Ä–æ–≤—ñ —Ä—ñ—à–µ–Ω–Ω—è —Ç–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—É –∫–æ–º–∞–Ω–¥—É, —â–æ–± –∑–∞–±–µ–∑–ø–µ—á–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞–º –≤–∏—Å–æ–∫—É —è–∫—ñ—Å—Ç—å –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è.\n\n"
        "‚úÖ –ï—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å, –ø—Ä–æ–∑–æ—Ä—ñ—Å—Ç—å —ñ —Ç—É—Ä–±–æ—Ç–∞ –ø—Ä–æ –∫–æ–∂–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞ ‚Äî –Ω–∞—à—ñ –æ—Å–Ω–æ–≤–Ω—ñ –ø—Ä–∏–Ω—Ü–∏–ø–∏.", reply_markup=main_info_kb, parse_mode="Markdown")
    await callback.answer()