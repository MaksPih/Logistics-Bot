import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from bot.config import BOT_TOKEN

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add(
    KeyboardButton("üì¶ –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∞—Ä—Ç—ñ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏"),
    KeyboardButton("üöõ –í—ñ–¥—Å—Ç–µ–∂–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
)
main_menu.add(
    KeyboardButton("üìã –î–æ–≤—ñ–¥–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è"),
    KeyboardButton("‚òéÔ∏è –ó–≤‚Äô—è–∑–æ–∫ –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
)

@dp.message()
async def start_handler(message: types.Message):
    if message.text == "/start":
        await message.answer(
            "–í–∞—Å –≤—ñ—Ç–∞—î –ª–æ–≥—ñ—Å—Ç–∏—á–Ω–∞ –∫–æ–º–ø–∞–Ω—ñ—è!\n"
            "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ üëá",
            reply_markup=main_menu
        )

async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    dp.startup.register(lambda _: print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ"))
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())