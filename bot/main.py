import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from bot.config import BOT_TOKEN
from bot.handlers import info
from bot.handlers import contact
from bot.handlers import delivery
from bot.services.database import init_db

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

dp.include_router(info.router)
dp.include_router(contact.router)
dp.include_router(delivery.router)
    
# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üì¶ –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∞—Ä—Ç—ñ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏")],
        [KeyboardButton(text="üöõ –í—ñ–¥—Å—Ç–µ–∂–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")],
        [KeyboardButton(text="üìã –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ –ø—Ä–æ TransLine Logistics"), KeyboardButton(text="‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç–∏ —Ç–∞ –ó–≤‚Äô—è–∑–æ–∫ –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")]
    ],
    resize_keyboard=True
)

@dp.message(lambda msg: msg.text == "/start")
async def start_handler(message: types.Message):
    if message.text == "/start":
        await message.answer(
            "–í–∞—Å –≤—ñ—Ç–∞—î –∫–æ–º–ø–∞–Ω—ñ—è *TransLine Logistics*! üöõ\n"
            "–ú–∏ –¥–æ–ø–æ–º–æ–∂–µ–º–æ –≤–∞–º —à–≤–∏–¥–∫–æ —Ç–∞ –±–µ–∑–ø–µ—á–Ω–æ –ø–µ—Ä–µ–≤–µ–∑—Ç–∏ –≤–∞–Ω—Ç–∞–∂—ñ –±—É–¥—å-—è–∫–æ—ó —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ.\n"
            "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ üëá",
            reply_markup=main_menu,
            parse_mode="Markdown"
        )

async def main():
    init_db()
    await bot.delete_webhook(drop_pending_updates=True)
    @dp.startup()
    async def on_startup(bot: Bot):
        print("‚úÖ –ë–æ—Ç —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ.")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())